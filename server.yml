Parameters:
  EnvironmentName:
    Description: An environment that will be prefixed to resources and their variables
    Type: String
  
  AMI-ID:
    Description: Linux 18.04 AMI image id
    Type: String
    Default: ami-003634241a8fcdec0

  DiskVolumeSize:
    Description: Specify the EBS storage volume desired. Minimum Strorage of 10 gb
    Type: String
    Default: 10

Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Setup S3 Access for Web App
      ManagedPolicyArns: "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
            Action: sts:AssumeRole
          Path: /
  
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
    
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      
  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
         #!/bin/bash
        apt-get update -y
        apt-get install apache2 -y
        systemctl start apache2.service
        cd /var/www/html
        sudo rm index.html
        sudo aws s3 cp s3://udacity-demo-1/udacity.zip .
        sudo unzip -o udacity.zip
        systemctl restart apache2.service

      ImageId: !Ref AMI-ID
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t2.medium
      Monitoring: true
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref DiskVolumeSize
          DeleteOnTermination: true



Output:

 